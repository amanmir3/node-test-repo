stages:
  - build
  - deploy

variables:
  AWS_REGION: "us-east-1" # Change to your desired AWS region
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID # Set in GitLab CI/CD variables
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY # Set in GitLab CI/CD variables
  LAMBDA_FUNCTION_NAME: "your-lambda-function-name" # Change to your Lambda function name
  S3_BUCKET: "your-s3-bucket-name" # Change to your S3 bucket name
  ZIP_FILE: "your-lambda-function.zip" # Change to your ZIP file name
  LOG_GROUP_NAME: "/aws/lambda/$LAMBDA_FUNCTION_NAME" # CloudWatch log group
  X_RAY_TRACING: "Active" # Enable X-Ray tracing

build:
  stage: build
  image: node:14 # Use Node.js 18 Docker image
  script:
    - npm install # Install npm dependencies
    - zip -r $ZIP_FILE . # Package the Lambda function into a ZIP file
  artifacts:
    paths:
      - $ZIP_FILE

deploy:
  stage: deploy
  image: amazon/aws-cli # Use AWS CLI Docker image
  script:
    - aws s3 cp $ZIP_FILE s3://$S3_BUCKET/ # Upload the ZIP file to S3
    - aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --s3-bucket $S3_BUCKET --s3-key $ZIP_FILE # Update the Lambda function code
    - aws lambda update-function-configuration --function-name $LAMBDA_FUNCTION_NAME --environment "LOG_GROUP_NAME=$LOG_GROUP_NAME" --tracing-config "Mode=$X_RAY_TRACING" # Update the Lambda function configuration
    - aws logs create-log-group --log-group-name $LOG_GROUP_NAME || echo "Log group already exists" # Create CloudWatch log group if it doesn't exist
    - aws logs put-retention-policy --log-group-name $LOG_GROUP_NAME --retention-in-days 14 # Set retention policy for the log group
  only:
    - main # Change to your default branch
